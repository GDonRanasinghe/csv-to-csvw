name: Generate CSV-W from csv upload to repository.

on:
  push:
    branches:
      - main
    paths:
      - "csv/**"
      - "*.csv"
      - "*.json"

jobs:
  generate_csvw_from_csv_upload:
    name: Generate CSV-W from csv upload
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install csvcubed
        run: pip install csvcubed

      - name: Verify csvcubed installation
        run: csvcubed version

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: View working directory
        run: ls -la $GITHUB_WORKSPACE

      - name: Get all the changes files
        id: changed-files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "csv"

      - name: List all the changes files
        run: |
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.changed-files.outputs.added_modified }}')

          for file in "${added_modified_files[@]}"; do
            echo "Processing changed file ${file}"  
            file_name="${file%.*}"
            file_extension="${file##*.}"
            echo "File name: ${file_name}"
            echo "File extension: ${file_extension}"

            if [[ "$file_extension" == "csv" ]]; then
              echo "Changed file is supported"
              for file_secondary in "${added_modified_files[@]}"; do
                file_secondary_name="${file_secondary%.*}"
                echo "file_secondary_name: ${file_secondary_name}.csv.json"
                echo "file_name: ${file_name}.csv.json"

                if [[ "${file_secondary_name}.csv.json" == "${file_name}.csv.json" ]]; then
                  echo "Found config."
                else
                  echo "Not found config."
                fi
              done
            else
              echo "Changed file is not supported"
            fi
          done

      - name: Build and inspect a CSV-W generated from a csv upload
        # TODO: Iterate over the folders/files and then run csvcubed build and inspect.
        run: |
          echo $'\nBuilding CSV-Ws\n'
          csvcubed build csv/sweden_at_eurovision_no_missing.csv
          ls out/
          echo $'\nInspecting CSV-Ws\n'
          csvcubed inspect out/sweden-at-eurovision-no-missing.csv-metadata.json

      - name: Build and inspect a CSV-W generated from a csv and config.json upload
        # TODO: Iterate over the files and then run csvcubed build and inspect.
        run: |
          echo $'\nBuilding CSV-Ws\n'
          csvcubed build csv/sweden_at_eurovision_no_missing.csv -c csv/sweden_at_eurovision_no_missing.csv.json
          ls out/
          echo $'\nInspecting CSV-Ws\n'
          csvcubed inspect out/sweden-at-eurovision-no-missing.csv-metadata.json

      # TODO: Change this to upload to artifacts: upload-artifact@v*
      - name: Commit generated CSV-Ws to the repository
        run: |
          echo $'\nCommitting CSV-Ws\n'
          git config --global user.name "CSV-W from csv upload generator"
          git add out/
          git commit -m "CSV-Ws generated from csv upload - $(date +'%d-%m-%Y at %H:%M:%S')"
          git push

      - name: Publish CSV-Ws and logs to GitHub Pages
        # TODO: Publish generated CSV-Ws and logs to GitHub pages.
        run: |
          echo $'\nPublishing CSV-Ws to GitHub Pages\n'
