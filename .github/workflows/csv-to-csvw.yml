name: Generate CSV-W from csv upload to repository.

on:
  push:
    branches:
      - main
    paths:
      - "csv/**"
      - "*.csv"
      - "*.json"

jobs:
  generate_csvw_from_csv_upload:
    name: Generate CSV-W from csv upload
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install csvcubed
        run: pip install csvcubed

      - name: Verify csvcubed installation
        run: csvcubed version

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: View working directory
        run: ls -la $GITHUB_WORKSPACE

      - name: Get all added/changed files
        id: get-changed-files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "csv"

      - name: Process all added/changed files
        run: |
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.get-changed-files.outputs.added_modified }}')

          for file in "${added_modified_files[@]}"; do
            unset config_file
            file_name="${file%.*}"
            file_extension="${file##*.}"

            if [[ "$file_extension" == "csv" ]]; then
              echo "Processing file ${file}"
              csv_file=${file}

              for file_secondary in "${added_modified_files[@]}"; do
                if [[ ${file_secondary##*/} == "${file_name}.csv.json" ]]; then
                  config_file="${file}.json"
                fi
              done

              echo "config_file: $config_file"

              if [[ -z $config_file ]]; then
                echo "Config for ${csv_file} is not available"
                echo $'Building CSV-Ws'
                csvcubed build ${csv_file}
                ls out/
              else
                echo "Config for ${csv_file} is available: ${config_file}"
                echo $'Building CSV-Ws'
                csvcubed build ${csv_file} -c ${config_file}
                ls out/
              fi

            fi
          done

      # TODO: Change this to upload to artifacts: upload-artifact@v*
      - name: Commit generated CSV-Ws to the repository
        run: |
          echo $'\nCommitting CSV-Ws\n'
          git config --global user.name "CSV-W from csv upload generator"
          git add out/
          git commit -m "CSV-Ws generated from csv upload - $(date +'%d-%m-%Y at %H:%M:%S')"
          git push

      - name: Publish CSV-Ws and logs to GitHub Pages
        # TODO: Publish generated CSV-Ws and logs to GitHub pages.
        run: |
          echo $'\nPublishing CSV-Ws to GitHub Pages\n'
